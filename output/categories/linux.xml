<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>tin_nqn (Posts sobre Linux)</title><link>https://mgaitan.github.io/</link><description></description><atom:link href="https://mgaitan.github.io/categories/linux.xml" rel="self" type="application/rss+xml"></atom:link><language>es</language><copyright>Contents © 2025 &lt;a href="mailto:gaitan@gmail.com"&gt;Martín Gaitán&lt;/a&gt; </copyright><lastBuildDate>Fri, 25 Jul 2025 03:56:54 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Veinteañero</title><link>https://mgaitan.github.io/posts/veinteanero/</link><dc:creator>Martín Gaitán</dc:creator><description>&lt;p&gt;Suse 7.0 fue la primera distro Linux que mi gloriosa Pentium II cobijó.
Al tiempo usé Mandrake, después Debian y desde su primera versión (2004)
Ubuntu.&lt;/p&gt;
&lt;p&gt;Un largo camino de aprendizaje... que alguna vez recorreré ;-)&lt;/p&gt;</description><category>Linux</category><guid>https://mgaitan.github.io/posts/veinteanero/</guid><pubDate>Fri, 08 Apr 2011 11:47:13 GMT</pubDate></item><item><title>Video SIS 771/671 en Ubuntu</title><link>https://mgaitan.github.io/posts/video-sis-771-671-en-ubuntu/</link><dc:creator>Martín Gaitán</dc:creator><description>&lt;aside class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: WARNING/2 (&lt;span class="docutils literal"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;, line 5); &lt;em&gt;&lt;a href="https://mgaitan.github.io/posts/video-sis-771-671-en-ubuntu/#este-xorg-conf-1"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Duplicate explicit target name: "este xorg.conf".&lt;/p&gt;
&lt;/aside&gt;
&lt;p&gt;Esto es una ayuda memoria para mi yo dubitativo del futuro: para hacer
funcionar el video de la notebook que es &lt;strong&gt;SiS 671/771&lt;/strong&gt; en &lt;strong&gt;Ubuntu&lt;/strong&gt;
(a partir de la versión 9.10) instalar &lt;a class="reference external" href="https://mgaitan.github.io/posts/video-sis-771-671-en-ubuntu/IMG/deb/xorg-driver-sis671_0-9_i386.deb"&gt;este
paquete&lt;/a&gt; y [STRIKEOUT:&lt;a class="reference external" href="https://mgaitan.github.io/posts/video-sis-771-671-en-ubuntu/IMG/bin/xorg.bin"&gt;este
xorg.conf&lt;/a&gt;] &lt;a class="reference external" href="https://mgaitan.github.io/posts/video-sis-771-671-en-ubuntu/IMG/bin/xorg-2.bin"&gt;este xorg.conf&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para pantalla dual con LCD externo a resolución full 1280x1024&lt;/p&gt;
&lt;pre class="literal-block"&gt;# /etc/X11/xorg.conf (Xorg X Window System server configuration file)
#
# This file was generated by fll_xorgconfig, the F.U.L.L.S.T.O.R.Y.
# Xorg Configuration tool.
#
# Edit this file with caution, and see the xorg.conf(5) manual page.
# (Type "man xorg.conf" at the shell prompt.)
#
Section "ServerLayout"
    Identifier  "Xorg Configured"
    Screen      "Screen 0"
EndSection

#Section "ServerFlags"
#   Option      "AllowMouseOpenFail"    "true"
#   Option      "DontZap"       "false"
#EndSection

Section "Device"
    Identifier  "Device 0"
    Driver      "sis671"
    #Driver     "vesa"
    BoardName   "Silicon Integrated Systems [SiS] 771/671 PCIE VGA Display Adapter"
    Option      "EnableSisCtrl" "yes"
    Option      "DRI" "off"
    Option      "MergedFBAuto" "true"
    Option      "MergedNonRectangular" "on"
    Option      "Merged DPI" "100 100"
    Option      "MetaModes" "1280x1024-1280x800 640x460-640x460 1280x800-1280x1024"
    BusID       "PCI:1:0:0"
EndSection

Section "Monitor"
    Identifier  "Monitor 0"
    ModelName   "Default Monitor"
    HorizSync   28-96
    VertRefresh 50-75
    # 640x350 @ 85.00 Hz (GTF) hsync: 31.28 kHz; pclk: 25.02 MHz
    Modeline "640x350"  25.02  640 656 720 800  350 351 354 368  -HSync +Vsync
    # 640x400 @ 85.00 Hz (GTF) hsync: 35.78 kHz; pclk: 29.20 MHz
    Modeline "640x400"  29.20  640 664 728 816  400 401 404 421  -HSync +Vsync
    # 640x480 @ 60.00 Hz (GTF) hsync: 29.82 kHz; pclk: 23.86 MHz
    Modeline "640x480"  23.86  640 656 720 800  480 481 484 497  -HSync +Vsync
    # 640x480 @ 72.00 Hz (GTF) hsync: 36.07 kHz; pclk: 29.43 MHz
    Modeline "640x480"  29.43  640 664 728 816  480 481 484 501  -HSync +Vsync
    # 640x480 @ 75.00 Hz (GTF) hsync: 37.65 kHz; pclk: 30.72 MHz
    Modeline "640x480"  30.72  640 664 728 816  480 481 484 502  -HSync +Vsync
    # 640x480 @ 85.00 Hz (GTF) hsync: 42.92 kHz; pclk: 35.71 MHz
    Modeline "640x480"  35.71  640 672 736 832  480 481 484 505  -HSync +Vsync
    # 640x480 @ 100.00 Hz (GTF) hsync: 50.90 kHz; pclk: 43.16 MHz
    Modeline "640x480"  43.16  640 680 744 848  480 481 484 509  -HSync +Vsync
    # 720x400 @ 85.00 Hz (GTF) hsync: 35.78 kHz; pclk: 32.64 MHz
    Modeline "720x400"  32.64  720 744 816 912  400 401 404 421  -HSync +Vsync
    # 768x576 @ 60.00 Hz (GTF) hsync: 35.82 kHz; pclk: 34.96 MHz
    Modeline "768x576"  34.96  768 792 872 976  576 577 580 597  -HSync +Vsync
    # 768x576 @ 72.00 Hz (GTF) hsync: 43.27 kHz; pclk: 42.93 MHz
    Modeline "768x576"  42.93  768 800 880 992  576 577 580 601  -HSync +Vsync
    # 768x576 @ 75.00 Hz (GTF) hsync: 45.15 kHz; pclk: 45.51 MHz
    Modeline "768x576"  45.51  768 808 888 1008  576 577 580 602  -HSync +Vsync
    # 768x576 @ 85.00 Hz (GTF) hsync: 51.42 kHz; pclk: 51.84 MHz
    Modeline "768x576"  51.84  768 808 888 1008  576 577 580 605  -HSync +Vsync
    # 768x576 @ 100.00 Hz (GTF) hsync: 61.10 kHz; pclk: 62.57 MHz
    Modeline "768x576"  62.57  768 816 896 1024  576 577 580 611  -HSync +Vsync
    # 800x600 @ 56.00 Hz (GTF) hsync: 34.72 kHz; pclk: 35.55 MHz
    Modeline "800x600"  35.55  800 832 912 1024  600 601 604 620  -HSync +Vsync
    # 800x600 @ 60.00 Hz (GTF) hsync: 37.32 kHz; pclk: 38.22 MHz
    Modeline "800x600"  38.22  800 832 912 1024  600 601 604 622  -HSync +Vsync
    # 800x600 @ 72.00 Hz (GTF) hsync: 45.07 kHz; pclk: 46.87 MHz
    Modeline "800x600"  46.87  800 840 920 1040  600 601 604 626  -HSync +Vsync
    # 800x600 @ 75.00 Hz (GTF) hsync: 47.02 kHz; pclk: 48.91 MHz
    Modeline "800x600"  48.91  800 840 920 1040  600 601 604 627  -HSync +Vsync
    # 800x600 @ 85.00 Hz (GTF) hsync: 53.55 kHz; pclk: 56.55 MHz
    Modeline "800x600"  56.55  800 840 928 1056  600 601 604 630  -HSync +Vsync
    # 800x600 @ 100.00 Hz (GTF) hsync: 63.60 kHz; pclk: 68.18 MHz
    Modeline "800x600"  68.18  800 848 936 1072  600 601 604 636  -HSync +Vsync
    # 1024x600 @ 60.00 Hz (GTF) hsync: 37.32 kHz; pclk: 48.96 MHz
    Modeline "1024x600"  48.96  1024 1064 1168 1312  600 601 604 622  -HSync +Vsync
    # 1024x768 @ 60.00 Hz (GTF) hsync: 47.70 kHz; pclk: 64.11 MHz
    Modeline "1024x768"  64.11  1024 1080 1184 1344  768 769 772 795  -HSync +Vsync
    # 1024x768 @ 70.00 Hz (GTF) hsync: 56.00 kHz; pclk: 76.16 MHz
    Modeline "1024x768"  76.16  1024 1080 1192 1360  768 769 772 800  -HSync +Vsync
    # 1024x768 @ 75.00 Hz (GTF) hsync: 60.15 kHz; pclk: 81.80 MHz
    Modeline "1024x768"  81.80  1024 1080 1192 1360  768 769 772 802  -HSync +Vsync
    # 1024x768 @ 85.00 Hz (GTF) hsync: 68.60 kHz; pclk: 94.39 MHz
    Modeline "1024x768"  94.39  1024 1088 1200 1376  768 769 772 807  -HSync +Vsync
    # 1024x768 @ 100.00 Hz (GTF) hsync: 81.40 kHz; pclk: 113.31 MHz
    Modeline "1024x768"  113.31  1024 1096 1208 1392  768 769 772 814  -HSync +Vsync
    # 1152x864 @ 75.00 Hz (GTF) hsync: 67.65 kHz; pclk: 104.99 MHz
    Modeline "1152x864"  104.99  1152 1224 1352 1552  864 865 868 902  -HSync +Vsync
    # 1152x864 @ 60.00 Hz (GTF) hsync: 53.70 kHz; pclk: 81.62 MHz
    Modeline "1152x864"  81.62  1152 1216 1336 1520  864 865 868 895  -HSync +Vsync
    # 1152x864 @ 85.00 Hz (GTF) hsync: 77.10 kHz; pclk: 119.65 MHz
    Modeline "1152x864"  119.65  1152 1224 1352 1552  864 865 868 907  -HSync +Vsync
    # 1152x864 @ 100.00 Hz (GTF) hsync: 91.50 kHz; pclk: 143.47 MHz
    Modeline "1152x864"  143.47  1152 1232 1360 1568  864 865 868 915  -HSync +Vsync
    # 1152x900 @ 77.00 Hz (GTF) hsync: 72.46 kHz; pclk: 112.45 MHz
    Modeline "1152x900"  112.45  1152 1224 1352 1552  900 901 904 941  -HSync +Vsync
    # 1152x900 @ 66.00 Hz (GTF) hsync: 61.71 kHz; pclk: 94.79 MHz
    Modeline "1152x900"  94.79  1152 1224 1344 1536  900 901 904 935  -HSync +Vsync
    # 1280x768 @ 60.00 Hz (GTF) hsync: 47.70 kHz; pclk: 80.14 MHz
    Modeline "1280x768"  80.14  1280 1344 1480 1680  768 769 772 795  -HSync +Vsync
    # 1280x800 @ 60.00 Hz (GTF) hsync: 49.68 kHz; pclk: 83.46 MHz
    Modeline "1280x800"  83.46  1280 1344 1480 1680  800 801 804 828  -HSync +Vsync
    # 1280x960 @ 60.00 Hz (GTF) hsync: 59.64 kHz; pclk: 102.10 MHzx
    Modeline "1280x960"  102.10  1280 1360 1496 1712  960 961 964 994  -HSync +Vsync
    # 1280x960 @ 72.00 Hz (GTF) hsync: 72.07 kHz; pclk: 124.54 MHz
    Modeline "1280x960"  124.54  1280 1368 1504 1728  960 961 964 1001  -HSync +Vsync
    # 1280x960 @ 75.00 Hz (GTF) hsync: 75.15 kHz; pclk: 129.86 MHz
    Modeline "1280x960"  129.86  1280 1368 1504 1728  960 961 964 1002  -HSync +Vsync
    # 1280x960 @ 85.00 Hz (GTF) hsync: 85.68 kHz; pclk: 149.43 MHz
    Modeline "1280x960"  149.43  1280 1376 1512 1744  960 961 964 1008  -HSync +Vsync
    # 1280x960 @ 100.00 Hz (GTF) hsync: 101.70 kHz; pclk: 178.99 MHz
    Modeline "1280x960"  178.99  1280 1376 1520 1760  960 961 964 1017  -HSync +Vsync
    # 1280x1024 @ 60.00 Hz (GTF) hsync: 63.60 kHz; pclk: 108.88 MHz
    Modeline "1280x1024"  108.88  1280 1360 1496 1712  1024 1025 1028 1060  -HSync +Vsync
    # 1280x1024 @ 67.00 Hz (GTF) hsync: 71.29 kHz; pclk: 123.19 MHz
    Modeline "1280x1024"  123.19  1280 1368 1504 1728  1024 1025 1028 1064  -HSync +Vsync
    # 1280x1024 @ 75.00 Hz (GTF) hsync: 80.17 kHz; pclk: 138.54 MHz
    Modeline "1280x1024"  138.54  1280 1368 1504 1728  1024 1025 1028 1069  -HSync +Vsync
    # 1280x1024 @ 76.00 Hz (GTF) hsync: 81.32 kHz; pclk: 141.82 MHz
    Modeline "1280x1024"  141.82  1280 1376 1512 1744  1024 1025 1028 1070  -HSync +Vsync
    # 1280x1024 @ 85.00 Hz (GTF) hsync: 91.38 kHz; pclk: 159.36 MHz
    Modeline "1280x1024"  159.36  1280 1376 1512 1744  1024 1025 1028 1075  -HSync +Vsync
    # 1280x1024 @ 100.00 Hz (GTF) hsync: 108.50 kHz; pclk: 190.96 MHz
    Modeline "1280x1024"  190.96  1280 1376 1520 1760  1024 1025 1028 1085  -HSync +Vsync
    # 1368x768 @ 60.00 Hz (GTF) hsync: 47.70 kHz; pclk: 85.86 MHz
    Modeline "1368x768"  85.86  1368 1440 1584 1800  768 769 772 795  -HSync +Vsync
    # 1440x900 @ 60.00 Hz (GTF) hsync: 55.92 kHz; pclk: 106.47 MHz
    Modeline "1440x900"  106.47  1440 1520 1672 1904  900 901 904 932  -HSync +Vsync
    # 1400x1050 @ 60.00 Hz (GTF) hsync: 65.22 kHz; pclk: 122.61 MHz
    Modeline "1400x1050"  122.61  1400 1488 1640 1880  1050 1051 1054 1087  -HSync +Vsync
    # 1400x1050 @ 72.00 Hz (GTF) hsync: 78.77 kHz; pclk: 149.34 MHz
    Modeline "1400x1050"  149.34  1400 1496 1648 1896  1050 1051 1054 1094  -HSync +Vsync
    # 1400x1050 @ 75.00 Hz (GTF) hsync: 82.20 kHz; pclk: 155.85 MHz
    Modeline "1400x1050"  155.85  1400 1496 1648 1896  1050 1051 1054 1096  -HSync +Vsync
    # 1400x1050 @ 85.00 Hz (GTF) hsync: 93.76 kHz; pclk: 179.26 MHz
    Modeline "1400x1050"  179.26  1400 1504 1656 1912  1050 1051 1054 1103  -HSync +Vsync
    # 1400x1050 @ 100.00 Hz (GTF) hsync: 111.20 kHz; pclk: 214.39 MHz
    Modeline "1400x1050"  214.39  1400 1512 1664 1928  1050 1051 1054 1112  -HSync +Vsync
    # 1440x900 @ 60.00 Hz (GTF) hsync: 55.92 kHz; pclk: 106.47 MHz
    Modeline "1440x900"  106.47  1440 1520 1672 1904  900 901 904 932  -HSync +Vsync
    # 1600x1200 @ 60.00 Hz (GTF) hsync: 74.52 kHz; pclk: 160.96 MHz
    Modeline "1600x1200"  160.96  1600 1704 1880 2160  1200 1201 1204 1242  -HSync +Vsync
    # 1600x1200 @ 65.00 Hz (GTF) hsync: 80.99 kHz; pclk: 176.23 MHz
    Modeline "1600x1200"  176.23  1600 1712 1888 2176  1200 1201 1204 1246  -HSync +Vsync
    # 1600x1200 @ 70.00 Hz (GTF) hsync: 87.43 kHz; pclk: 190.25 MHz
    Modeline "1600x1200"  190.25  1600 1712 1888 2176  1200 1201 1204 1249  -HSync +Vsync
    # 1600x1200 @ 75.00 Hz (GTF) hsync: 93.97 kHz; pclk: 205.99 MHz
    Modeline "1600x1200"  205.99  1600 1720 1896 2192  1200 1201 1204 1253  -HSync +Vsync
    # 1600x1200 @ 85.00 Hz (GTF) hsync: 107.10 kHz; pclk: 234.76 MHz
    Modeline "1600x1200"  234.76  1600 1720 1896 2192  1200 1201 1204 1260  -HSync +Vsync
    # 1600x1200 @ 100.00 Hz (GTF) hsync: 127.10 kHz; pclk: 280.64 MHz
    Modeline "1600x1200"  280.64  1600 1728 1904 2208  1200 1201 1204 1271  -HSync +Vsync
    # 1680x1050 @ 60.00 Hz (GTF) hsync: 65.22 kHz; pclk: 147.14 MHz
    Modeline "1680x1050"  147.14  1680 1784 1968 2256  1050 1051 1054 1087  -HSync +Vsync
    # 1792x1344 @ 60.00 Hz (GTF) hsync: 83.46 kHz; pclk: 202.97 MHz
    Modeline "1792x1344"  202.97  1792 1920 2112 2432  1344 1345 1348 1391  -HSync +Vsync
    # 1792x1344 @ 75.00 Hz (GTF) hsync: 105.23 kHz; pclk: 259.27 MHz
    Modeline "1792x1344"  259.27  1792 1928 2128 2464  1344 1345 1348 1403  -HSync +Vsync
    # 1856x1392 @ 60.00 Hz (GTF) hsync: 86.46 kHz; pclk: 218.57 MHz
    Modeline "1856x1392"  218.57  1856 1992 2192 2528  1392 1393 1396 1441  -HSync +Vsync
    # 1856x1392 @ 75.00 Hz (GTF) hsync: 108.97 kHz; pclk: 277.23 MHz
    Modeline "1856x1392"  277.23  1856 2000 2200 2544  1392 1393 1396 1453  -HSync +Vsync
    # 1920x1200 @ 60.00 Hz (GTF) hsync: 74.52 kHz; pclk: 193.16 MHz
    Modeline "1920x1200"  193.16  1920 2048 2256 2592  1200 1201 1204 1242  -HSync +Vsync
    # 1920x1440 @ 60.00 Hz (GTF) hsync: 89.40 kHz; pclk: 234.59 MHz
    Modeline "1920x1440"  234.59  1920 2064 2272 2624  1440 1441 1444 1490  -HSync +Vsync
    # 1920x1440 @ 75.00 Hz (GTF) hsync: 112.73 kHz; pclk: 297.59 MHz
    Modeline "1920x1440"  297.59  1920 2072 2280 2640  1440 1441 1444 1503  -HSync +Vsync
EndSection

Section "Screen"
    Identifier  "Screen 0"
    Monitor     "Monitor 0"
    DefaultColorDepth 24
    SubSection "Display"
        Depth   24
        Modes   "1200x800"
    EndSubSection
EndSection

Section "Extensions"
    Option  "Composite" "off"&lt;/pre&gt;</description><category>Linux</category><guid>https://mgaitan.github.io/posts/video-sis-771-671-en-ubuntu/</guid><pubDate>Mon, 10 May 2010 19:10:25 GMT</pubDate></item><item><title>Deja que el servidor trabaje por tí con GNU Screen</title><link>https://mgaitan.github.io/posts/deja-que-el-servidor-trabaje-por/</link><dc:creator>Martín Gaitán</dc:creator><description>&lt;p&gt;Ya somos avispados usuarios de la línea de comandos y hacemos nuestros
pinitos administrando un servidor: movemos, bajamos y hasta compilamos
directamente en una maquina remota, muchas veces más potente y con más
ancho de banda que la nuestra.&lt;/p&gt;
&lt;p&gt;Nuestra terminal cliente sólo ejecuta
&lt;a class="reference external" href="http://www.openssh.com/"&gt;OpenSSH&lt;/a&gt; (o
&lt;a class="reference external" href="http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html"&gt;Putty&lt;/a&gt;
en Windows)&lt;/p&gt;
&lt;p&gt;Pero cuando se trata de ejecutar un proceso largo y de nula
interactividad no tiene mucho sentido seguir conectados ¿Para qué gastar
tiempo y recursos (dejar la PC cliente prendida, por ejemplo) si el
trabajo sólo se hace en el servidor?&lt;/p&gt;
&lt;p&gt;Este caso se da muchas veces, sobre todo (y aquí lo que me interesa)
cuando bajamos archivos muy pesados o hacer un mirror de un repositorio
completo.&lt;/p&gt;
&lt;p&gt;Y aquí cómo resolverlo: usa &lt;a class="reference external" href="http://es.wikipedia.org/wiki/GNU_Screen"&gt;GNU
Screen&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Screen es un multiplexor/virtualizador de terminales, y entre sus muchas
e interesantes características incluye el desacople de su proceso padre.&lt;/p&gt;
&lt;p&gt;Esto significa que se puede ejecutar una terminal virtual con screen (en
una terminal remota por ssh, por ejemplo), ejecutar cualquier proceso en
ese entorno y desacoplarlo, pudiendo entonces desloguearse y cerrar la
conexión remota dejando el proceso en curso.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Receta paso a paso&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ejecuta una consola virtual con screen&lt;/p&gt;
&lt;pre class="literal-block"&gt;$ screen&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ejecuta tu proceso largo. Por ejemplo, bajar la beta de Ubuntu Karmic
Koala en DVD&lt;/p&gt;
&lt;pre class="literal-block"&gt;$ wget http://mirror.mcs.anl.gov/pub/ubuntu-iso/DVDs/ubuntu/9.10/beta/ubuntu-9.10-beta-dvd-i386.iso&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Desacoplar el proceso con la combinación de teclas &lt;strong&gt;Control+A D&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Desconectarse, tomar unos mates y volver cuando quieras&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Para retomar el proceso&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Conectarnos de nuevo al servidor mediante SSH&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Listar las consolas virtuales para averiguar el PID&lt;/p&gt;
&lt;pre class="literal-block"&gt;$ screen -list&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Traer a primer plano el proceso en cuestión con&lt;/p&gt;
&lt;pre class="literal-block"&gt;$ screen -r PID&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;y allí estará el proceso que dejamos corriendo (o al menos los rastros
que dejó en su paso).&lt;/p&gt;</description><category>Linux</category><guid>https://mgaitan.github.io/posts/deja-que-el-servidor-trabaje-por/</guid><pubDate>Mon, 19 Oct 2009 23:33:31 GMT</pubDate></item><item><title>Digitalizando recuerdos con mencoder</title><link>https://mgaitan.github.io/posts/digitalizando-recuerdos-con/</link><dc:creator>Martín Gaitán</dc:creator><description>&lt;p&gt;Para el Mundial del 2006, compré, como tantos otros que no tenían
televisor pero sí computadora, una plaquita sintonizadora de TV: una
Kozumi con el chip sintonizador BT878, uno de los más genéricos y
bastante bien soportado en linux.&lt;/p&gt;
&lt;p&gt;Tuvo poca utilidad en aquel 2006, primero porque argentina no duró
demasiado y segundo y principal porque un vecino reclamó potestad sobre
la señal del cable coaxil que alimentaba mi chip y mis ilusiones
mundialistas.&lt;/p&gt;
&lt;p&gt;Quedó cajoneada en algun rincón, hasta que rescaté del olvido la
videofilmadora de la familia, una vieja y noble JVC , con un montón de
casetitos Compact VHS (que es el formato con el que funciona).&lt;/p&gt;
&lt;p&gt;Así que después de mucho patear la tarea, decidí conectar los cables y
encontrar la forma de convertir en bytes los recuerdos archivados en
esos casettes polvorientos.&lt;/p&gt;
&lt;section id="lo-que-hice"&gt;
&lt;h2&gt;Lo que hice&lt;/h2&gt;
&lt;p&gt;Primero, configurar la placa. El chip bt878 se usa en muchísimas
sintonizadoras que tienen configuraciones diferentes. Para asignarle los
correctos, se pasa un código &lt;code class="docutils literal"&gt;card&lt;/code&gt; que se obtiene de &lt;a class="reference external" href="http://www.mjmwired.net/kernel/Documentation/video4linux/CARDLIST.bttv"&gt;esta
lista&lt;/a&gt;.
En mi caso, para una Kozumi ktv-01c, el código es 151. El comando
completo con el que configuro el módulo es:&lt;/p&gt;
&lt;pre class="literal-block"&gt;sudo modprobe bttv card=151 pll=1 tuner=38 radio=1 bttv_verbose=1 gbuffers=4&lt;/pre&gt;
&lt;p&gt;Luego, el supercomando mencoder:&lt;/p&gt;
&lt;pre class="literal-block"&gt;mencoder tv:// -tv driver=v4l2:device=/dev/video0:input=1:width=480:height=360:norm=ntsc:alsa:adevice=hw.0:amode=1:audiorate=44100:forceaudio:forcechan=1:buffersize=300 -oac mp3lame -lameopts cbr:br=96:mode=3 -af volume=-6:0,channels=1 -ovc lavc -lavcopts vcodec=mpeg4:vbitrate=5000:keyint=125:mbd=2 -vf yadif,crop=464:352:8:2  -o salida.avi&lt;/pre&gt;
&lt;p&gt;Algunos detalles:&lt;/p&gt;
&lt;p&gt;&lt;img alt="-" src="https://mgaitan.github.io/posts/digitalizando-recuerdos-con/local/cache-vignettes/L8xH11/puce-32883.gif"&gt; &lt;a class="reference external" href="tv://"&gt;tv://&lt;/a&gt; indica que se va a capturar video, y se le pasan paramétros
luego del flag -tv: driver &lt;strong&gt;v4l2&lt;/strong&gt;, un tamaño de 480x360 (aunque
después se recorta), preconfigurado para ntsc (29.97 fps).
&lt;img alt="image1" src="https://mgaitan.github.io/posts/digitalizando-recuerdos-con/local/cache-vignettes/L8xH11/puce-32883.gif"&gt; Un aspecto importante son los flags referidos al audio: se
captura el audio &lt;strong&gt;alsa&lt;/strong&gt;, indicando la placa de sonido, el modo y la
calidad (mono a 44100hz de ancho de banda)
&lt;img alt="image2" src="https://mgaitan.github.io/posts/digitalizando-recuerdos-con/local/cache-vignettes/L8xH11/puce-32883.gif"&gt; El audio se comprime con &lt;strong&gt;lame&lt;/strong&gt; a mp3 de 96kps constante.
&lt;img alt="image3" src="https://mgaitan.github.io/posts/digitalizando-recuerdos-con/local/cache-vignettes/L8xH11/puce-32883.gif"&gt; con &lt;strong&gt;-af volume&lt;/strong&gt; le bajo el volumen 6db, porque de otra
manera me salía saturado (estoy capturando desde el microfono). El
parametro &lt;strong&gt;forceraudio&lt;/strong&gt; fuerza la captura aunque la entrada esté
silenciada en la mezcladora. También se fuerza a grabar un solo canal
con &lt;strong&gt;forcechan=1&lt;/strong&gt;.
&lt;img alt="image4" src="https://mgaitan.github.io/posts/digitalizando-recuerdos-con/local/cache-vignettes/L8xH11/puce-32883.gif"&gt; Con -ovc lavc se usa &lt;strong&gt;libavcodec&lt;/strong&gt; (ffmpeg), comprimiendo en
mpeg4 a un bitrate de 5000.
&lt;img alt="image5" src="https://mgaitan.github.io/posts/digitalizando-recuerdos-con/local/cache-vignettes/L8xH11/puce-32883.gif"&gt; Se aplican 2 filtros de video al vuelo: &lt;strong&gt;yadif&lt;/strong&gt; que es el
mejor filtro desentralazador (necesario para captura analógica) y un
&lt;strong&gt;crop&lt;/strong&gt; que recorta 8 pixeles de los costados, 2 de arriba y 6 de
abajo, para evitar la distorción que producen los cabezales con las
cintas viejas.&lt;/p&gt;
&lt;p&gt;El resultado es un video de unos 250kb/s de calidad más que aceptable.&lt;/p&gt;
&lt;p&gt;Por ejemplo, el casamiento de mi hermano Juan, en 1998:&lt;/p&gt;
&lt;/section&gt;</description><category>Linux</category><guid>https://mgaitan.github.io/posts/digitalizando-recuerdos-con/</guid><pubDate>Wed, 30 Sep 2009 17:56:40 GMT</pubDate></item><item><title>Ultima versión de Spip por SVN</title><link>https://mgaitan.github.io/posts/ultima-version-de-spip-por-svn/</link><dc:creator>Martín Gaitán</dc:creator><description>&lt;p&gt;Como sabemos, el desarrollo de SPIP se realiza a través del sistema de
control de versiones Subversion.&lt;/p&gt;
&lt;p&gt;A través de Subversion, podemos obtener la ultima version de desarrollo
considerada estable&lt;/p&gt;
&lt;pre class="literal-block"&gt;svn checkout svn://trac.rezo.net/spip/branches/spip-2.0/  carpeta_destino&lt;/pre&gt;
&lt;p&gt;Una de las ventajas de obtener SPIP a través de SVN, es que luego es muy
fácil de actualizar.&lt;/p&gt;
&lt;pre class="literal-block"&gt;cd  carpeta_destino
svn update&lt;/pre&gt;
&lt;p&gt;Subversion asigna un numero de revision a cada cambio realizado al
conjunto de archivos. Así, cuando los desarrolladores lo evaluan
pertinente, en un determinado momento del desarrollo se empaqueta una
nueva version "oficial"&lt;/p&gt;
&lt;p&gt;Por ejemplo, la revisión
&lt;a class="reference external" href="http://trac.rezo.net/trac/spip/browser/branches/spip-2.0?rev=13982"&gt;13982&lt;/a&gt;
es la version 2.08 de Spip.&lt;/p&gt;
&lt;p&gt;Podemos obtener una revision específica con el parámetro -r. Por
ejemplo, el siguiente comando obtendría una copia de SPIP 2.08&lt;/p&gt;
&lt;pre class="literal-block"&gt;svn -r 13982 checkout svn://trac.rezo.net/spip/branches/spip-2.0/  carpeta_destino&lt;/pre&gt;
&lt;p&gt;Genial, pero para para asegurarnos estar en una revision que se
corresponda con una "version oficial" tenemos que saber el número de ID.&lt;/p&gt;
&lt;p&gt;En el &lt;a class="reference external" href="http://trac.rezo.net/trac/spip/wiki"&gt;Trac de Spip&lt;/a&gt; se mantiene
una tabla donde se especifica esta correspondencia para cada nueva
version, pero a decir verdad, es un engorro tener que ingresar sólo para
averiguar un número. Mejor hagámoslo automático!&lt;/p&gt;
&lt;section id="automatizando-la-obtencion-de-un-spip-oficial-por-svn"&gt;
&lt;h2&gt;Automatizando la obtención de un SPIP oficial por SVN&lt;/h2&gt;
&lt;pre class="literal-block"&gt;#!/bin/bash
#script para una instalacion de spip a traves de svn

if [ $# -lt 1 ]
then
echo "Debe indicar al menos un parametro:"
echo "$0 destino [rev]"
echo
exit 1
fi


if [ $# -eq 2 ]
then
REV=$2
else
echo "Averiguando revision de la ultima release..."
REV=$(svn info svn://trac.rezo.net/spip/archivelist.txt | sed -n '9p' | cut -d' ' -f5)
fi


echo "Recuperando la version $REV de SPIP"
svn checkout -r `echo $REV` svn://trac.rezo.net/spip/branches/spip-2.0/ $1 1&amp;gt;/dev/null
echo "Configurando permisos..."
cd $1
chmod 657 IMG local tmp config
echo "Lanzando el navegador para continuar la instalacion..."
firefox http://localhost/~tin/$1/ecrire&lt;/pre&gt;
&lt;p&gt;Este script hace el trabajo aburrido por nosotros. Averigua cuál fue la
última modificación de &lt;em&gt;archivelist.txt&lt;/em&gt; que es un archivo que se
modifica en cada nuevo lanzamiento de paquete. ¡Es el dato que nos hacía
falta!&lt;/p&gt;
&lt;/section&gt;
&lt;section id="una-solucion-mas-genuina"&gt;
&lt;h2&gt;Una solución más genuina&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Atención&lt;/strong&gt;: Ya me hicieron caso. &lt;a class="reference external" href="https://mgaitan.github.io/blog/article/ultima-version-de-spip-por-svn#update"&gt;Ver
actualización&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Aunque el hacking (como este) es sano y divertido (y a veces también
útil), la solución más genuina sería que los desarrolladores de SPIP
mantengan un &lt;strong&gt;tag&lt;/strong&gt; por cada nuevo empaquetamiento y uno que apunte
siempre al último.&lt;/p&gt;
&lt;p&gt;Por ejemplo, con el siguiente comando deberiamos obtener la version 2.05
(sin saber a qué numero de revision corresponde)&lt;/p&gt;
&lt;pre class="literal-block"&gt;svn checkout svn://trac.rezo.net/spip/tags/2.05&lt;/pre&gt;
&lt;p&gt;y con este otro obtener la &lt;strong&gt;última&lt;/strong&gt; versión&lt;/p&gt;
&lt;pre class="literal-block"&gt;svn checkout svn://trac.rezo.net/spip/tags/lastest-version&lt;/pre&gt;
&lt;p&gt;Esto, por ahora, no está implementado, pero ya hice llegar mi propuesta
a &lt;em&gt;l’equipe&lt;/em&gt; de SPIP, y &lt;a class="reference external" href="http://article.gmane.org/gmane.comp.web.spip.devel/53503"&gt;lo están
discutiendo&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;section id="actualizacion"&gt;
&lt;h2&gt;Actualización&lt;/h2&gt;
&lt;p&gt;Gracias a &lt;a class="reference external" href="http://my.opera.com/tech-nova/blog/"&gt;Gilles&lt;/a&gt; el Dev Team
adoptó mi propuesta y ahora existen Tags en el arbol SVN de spip. En
particular,&lt;/p&gt;
&lt;pre class="literal-block"&gt;svn co svn://trac.rezo.net/spip/tags/spip-2-stable&lt;/pre&gt;
&lt;/section&gt;</description><category>Linux</category><category>spip</category><guid>https://mgaitan.github.io/posts/ultima-version-de-spip-por-svn/</guid><pubDate>Fri, 22 May 2009 03:19:54 GMT</pubDate></item><item><title>Piccola Radiolina</title><link>https://mgaitan.github.io/posts/piccola-radiolina/</link><dc:creator>Martín Gaitán</dc:creator><description>&lt;p&gt;&lt;a class="reference external" href="http://code.google.com/p/radiolina/"&gt;Radiolina&lt;/a&gt; es a mi jornada
laboral lo que la Spika a la de mi abuelo, en aquellas mañanas de viñas
mendocinas.&lt;/p&gt;
&lt;p&gt;Es un simple script &lt;a class="reference external" href="http://es.wikipedia.org/wiki/bash"&gt;bash&lt;/a&gt; que se
vale del mágico &lt;a class="reference external" href="http://www.mplayerhq.hu"&gt;mplayer&lt;/a&gt; para reproducir las
radios más importantes de argentina (y otras mejores que esas).&lt;/p&gt;
&lt;p&gt;Para bajar y empezar a disfrutar Radiolina puedes ejecutar los
siguientes comandos desde tu consola.&lt;/p&gt;
&lt;pre class="literal-block"&gt;wget http://radiolina.googlecode.com/svn/trunk/radiolina
chmod +x radiolina
./radiolina&lt;/pre&gt;
&lt;p&gt;Como frecuentemente lo actualizo, te recomiendo que utilices SVN para
bajar el programa. En vez de la primer linea (&lt;em&gt;wget...&lt;/em&gt;) utilizar&lt;/p&gt;
&lt;pre class="literal-block"&gt;svn checkout https://radiolina.googlecode.com/svn/trunk/ ./&lt;/pre&gt;</description><category>Linux</category><guid>https://mgaitan.github.io/posts/piccola-radiolina/</guid><pubDate>Sun, 19 Apr 2009 17:14:39 GMT</pubDate></item><item><title>Backup selectivo de tablas Mysql</title><link>https://mgaitan.github.io/posts/backup-selectivo-de-tablas-mysql/</link><dc:creator>Martín Gaitán</dc:creator><description>&lt;p&gt;Un comando muy práctico para hacer backups de una base de datos MySQL es
&lt;em&gt;mysqldump&lt;/em&gt;.&lt;/p&gt;
&lt;pre class="literal-block"&gt;mysqldump -h SERVIDOR -u USUARIO -pPASSWORD base_de_datos &amp;gt; backup.sql&lt;/pre&gt;
&lt;p&gt;Eso hace un backup completo de la base &lt;em&gt;base_de_datos&lt;/em&gt; (incluyendo la
creación de todas las tablas.&lt;/p&gt;
&lt;p&gt;Para restaurar ese backup se hace directamente inyectando el sql al
interprete de mysql.&lt;/p&gt;
&lt;pre class="literal-block"&gt;mysql -h SERVIDOR -u USUARIO -pPASSWORD base_de_datos&lt;/pre&gt;
&lt;section id="respaldar-solo-algunas-tablas-de-la-base"&gt;
&lt;h2&gt;Respaldar sólo algunas tablas de la base&lt;/h2&gt;
&lt;p&gt;A menudo tenemos multiples sistemas instalados sobre la misma base de
datos, Si sólo queremos respaldar algunas tablas bastaría enumerar las
tablas luego del nombre de la base de datos&lt;/p&gt;
&lt;pre class="literal-block"&gt;mysqldump -h SERVIDOR -u USUARIO -pPASSWORD base_de_datos  tabla1 tabla2 &amp;gt; backup.sql&lt;/pre&gt;
&lt;p&gt;Pero si estas tablas son muchas, es engorroso definirlas una por una.
Por suerte, en general, un prefijo asocia todas las tablas de un
sistema.&lt;/p&gt;
&lt;p&gt;En ese caso, se puede usar el siguiente compando que respalda todas las
tablas con un prefijo, En este ejemplo, las que comienzan con "spip_":&lt;/p&gt;
&lt;pre class="literal-block"&gt;mysql -h SERVIDOR -u USUARIO -pPASSWORD base_de_datos  -e 'show tables like "spip_%"' | grep -v Tables_in | xargs mysqldump -h SERVIDOR -u USUARIO -pPASSWORD base_de_datos &amp;gt; backup.sql&lt;/pre&gt;
&lt;/section&gt;</description><category>Linux</category><guid>https://mgaitan.github.io/posts/backup-selectivo-de-tablas-mysql/</guid><pubDate>Tue, 31 Mar 2009 12:37:49 GMT</pubDate></item><item><title>Auto Podcast</title><link>https://mgaitan.github.io/posts/auto-podcast/</link><dc:creator>Martín Gaitán</dc:creator><description>&lt;p&gt;&lt;a class="reference external" href="http://efectotabano.nqnwebs.com"&gt;Efecto Tábano&lt;/a&gt; es el programa radial
de mi amigo Fernando Barraza. Objetivamente, uno de los mejores
programas radiales de Argentina.&lt;/p&gt;
&lt;p&gt;Lamentablemente, desde que me vine a Córdoba tuve que conformarme con
los fragmentos de entrevistas o especiales que Fernando subía a la web.
Pero ahora que la &lt;a class="reference external" href="http://fm1037online.com/"&gt;Radio Calf-UNC&lt;/a&gt; está
online, la alegría está completa.&lt;/p&gt;
&lt;p&gt;El único problema que queda es que no todos los días tengo el tiempo de
escucharlo de 16 a 18hs, Necesitaba grabarlo para escucharlo offline.&lt;/p&gt;
&lt;p&gt;Bien podría haber hecho esto localmente pero como al sitio lo administro
yo, dije... ¿por qué no grabar el programa directamente desde el
servidor, y que cualquiera pueda bajarlo cuando quiera?&lt;/p&gt;
&lt;p&gt;Aquí está mi podcaster automático para Efecto Tábano.&lt;/p&gt;
&lt;section id="la-idea"&gt;
&lt;h2&gt;La idea&lt;/h2&gt;
&lt;p&gt;Todo se basa en el glorioso &lt;a class="reference external" href="http://mplayerhq.hu"&gt;Mplayer&lt;/a&gt;, Mplayer es
capaz de reproducir casi cualquier formato en streaming.&lt;/p&gt;
&lt;p&gt;Por supuesto, no habrá sonido en esa "reproducción" sobre el servidor,
pero lo que queremos es la info para grabarla.&lt;/p&gt;
&lt;p&gt;En vez de enviarla a la placa de sonidos, la información cruda (el
sonido WAV) lo enviamos a un archivo fifo desde donde
&lt;a class="reference external" href="http://lame.sourceforge.net/"&gt;lame&lt;/a&gt; obtendrá su fuente de datos para
comprimir a MP3 &lt;em&gt;on the fly&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Todo esto, claro, se ejecutará al horario del programa (y durante el
tiempo que se indique, en este caso casi 2 horas) mediante una tarea
&lt;a class="reference external" href="http://es.wikipedia.org/wiki/Cron_(Unix)"&gt;cron&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;section id="instalando-lo-necesario"&gt;
&lt;h2&gt;Instalando lo necesario&lt;/h2&gt;
&lt;p&gt;Como anticipé, hace falta mplayer y lame. Estos programas en general no
se encuentran en el servidor (por ejemplo
&lt;a class="reference external" href="http://www.dreamhost.com/r.cgi?150740"&gt;Dreamhost&lt;/a&gt;) así que hay que
instalarlos. Como tampoco somos root (la gran mayoría de las veces)
habrá que compilarlos desde las fuentes e instalarlos a nivel usuario.&lt;/p&gt;
&lt;p&gt;primero crear, si no existiése, un directorio /bin donde irán nuestros
programas.&lt;/p&gt;
&lt;pre class="literal-block"&gt;mkdir bin
chmod 775 bin&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Mplayer y mencoder&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;wget http://www3.mplayerhq.hu/MPlayer/releases/codecs/essential-20061022.tar.bz2
bunzip2 essential-20061022.tar.bz2
tar -xf essential-20061022.tar
mv essential-20061022 $HOME/lib
wget http://www3.mplayerhq.hu/MPlayer/releases/MPlayer-1.0rc1.tar.bz2
bunzip2 MPlayer-1.0rc1.tar.bz2
tar -xf MPlayer-1.0rc1.tar
cd MPlayer-1.0rc1
./configure --prefix=$HOME --codecsdir=$HOME/lib/essential-20061022
make
make install&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;LAME&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;wget http://nchc.dl.sourceforge.net/sourceforge/lame/lame-3.97.tar.gz
tar -zxvf lame-3.97.tar.gz
cd lame-3.97
./configure "--prefix=$HOME" "--enable-shared"
make
make install&lt;/pre&gt;
&lt;p&gt;Con eso ya tendríamos los programas necesarios en &lt;strong&gt;./bin&lt;/strong&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;section id="el-script-podcaster-efectotabano-sh"&gt;
&lt;h2&gt;El script podcaster-efectotabano.sh&lt;/h2&gt;
&lt;pre class="literal-block"&gt;#!/bin/sh
#
# recorder — wrapper to pull remote audio stream and convert contents
# to mp3

# Path and arguments to lame (mp3 encoder)
lame="$HOME/bin/lame -S -b 32 -m m"

# Path and arguments to mplayer (stream decoder)
mplayer="$HOME/bin/mplayer -quiet"

# Where to put the output files
odir="$HOME/efectotabano.com.ar/podcast"

showname="efectotabano-`date +%Y-%m-%d`"
duration="6660"
url="http://78.159.108.83:8690/"

fifo="${showname}_fifo"
ofile="$odir/${showname}.mp3"

#- end config ----------------------------------------------------

mkfifo $fifo
$lame $fifo $ofile &amp;amp;
$mplayer  -vc null -vo null -ao pcm:file=$fifo $url &amp;amp;

sleep 5
pids=`ps auxww | grep $fifo | awk '{print $duration}'`

sleep `echo ${duration} | bc`

kill $pids
rm $fifo&lt;/pre&gt;
&lt;p&gt;La primera parte permite configurar las rutas y parámetros de los
programas a usar, así como el formato y destino del mp3 de salida.&lt;/p&gt;
&lt;p&gt;En este caso los parámetros de lame indican que se grabará a 32kbps en
mono.&lt;/p&gt;
&lt;p&gt;Los mp3 de salida irán a &lt;a class="reference external" href="http://www.efectotabano.com.ar/podcast/"&gt;este
destino&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Este script se ejecuta de lunes a viernes a las 12:09 hora del servidor
(16:09 en argentina) y durante 6660 segundo, de modo que termina
tentativamente junto con la finalización del programa.&lt;/p&gt;
&lt;p&gt;Para configurar la tarea en cron ejecutar &lt;strong&gt;crontab -e&lt;/strong&gt;. La tarea a
agregar luce así:&lt;/p&gt;
&lt;pre class="literal-block"&gt;09 12 * * 1-5 ~/bin/podcaster-efectotabano.sh&lt;/pre&gt;
&lt;p&gt;Eso es todo. Todos los días, de lunes a viernes tendré mi programa para
descargar.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="to-do"&gt;
&lt;h2&gt;TO DO&lt;/h2&gt;
&lt;p&gt;Por supuesto, para que esto sea un
&lt;a class="reference external" href="http://es.wikipedia.org/wiki/podcast"&gt;podcast&lt;/a&gt; le falta la
sindicación. Por lo tanto, habría que agregar la tarea de injectar
información pertinente en una base de datos del cual generar el XML de
sindicación.&lt;/p&gt;
&lt;/section&gt;</description><category>Linux</category><guid>https://mgaitan.github.io/posts/auto-podcast/</guid><pubDate>Sat, 21 Mar 2009 15:53:03 GMT</pubDate></item></channel></rss>